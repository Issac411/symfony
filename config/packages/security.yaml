security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        #Indique quelle entité nous sert à nous identifier
        chain_provider:
            chain:
                providers: [db_username, db_email]
        db_username:
            entity:
                class: App\Entity\User
                property: username
        db_email:
            entity:
                class: App\Entity\User
                property: email
    encoders:
        #pour l'encodage du mot de passe
        App\Entity\User:
            algorithm: bcrypt

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            pattern: ^/
            provider: chain_provider
            #pour le login
            form_login:
                #nom de la route
                login_path: user_login
                check_path: user_login
                default_target_path: ideeliste
            logout_on_user_change: true
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
            logout:
                path: user_logout
                target: user_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    #Donner un role à un autre
    #role_hierarchy:
    #    ROLE_ADMIN: ROLE_USER

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/category, roles: ROLE_ADMIN }
        - { path: ^/idee, roles: ROLE_USER }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
